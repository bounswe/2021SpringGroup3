{"version":3,"sources":["store/types.js","store/actions/loginActions.js","store/urls.js","store/axios.js","utils/helper.js","components/Login.js","pages/LoginPage.js","components/Registration.js","pages/RegistrationPage.js","components/Confirmation.js","pages/ConfirmationPage.js","components/CreatePostForm.js","components/CreatePost.js","utils/logo.png","components/GetCommunities.js","components/NavBar.js","pages/HomePage.js","components/FieldContent.js","components/Post.js","history.js","routing/PublicRoute.js","routing/AuthRoute.js","components/CreateCommunity.js","pages/CreateCommunityPage.js","components/CreatePostType.js","pages/CreatePostTypePage.js","components/AboutCommunity.js","pages/GetCommunityPage.js","routing/RouteList.js","components/ProfileEdit.js","components/ProfileView.js","App.js","store/reducers/loginReducers.js","store/reducers/index.js","store/store.js","index.js"],"names":["LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGOUT","LOGOUT_SUCCESS","LOGOUT_FAILURE","login","info","type","payload","loginSuccess","loginFailure","register","registerSuccess","BASE_URL","LOGIN_ENDPOINT","LOGOUT_ENDPOINT","REGISTER_ENDPOINT","CREATE_COMMUNITY_ENDPOINT","GET_COMMUNITIES_ENDPOINT","GET_COMMUNITY_PAGE_ENDPOINT","CREATE_POSTTYPE_ENDPOINT","a","header","headers","body","username","password","axios","post","response","console","log","email","logout","delete","createCommunity","token","name","createPostType","getCommunities","get","getCommunityPage","id","Login","dispatch","loginAction","status","Logout","Register","CreateCommunity","data","community","CreatePostType","GetCommunities","GetCommunityPage","Text","Typography","subButtonStyle","fontSize","color","cursor","navigate","useNavigate","useDispatch","gutter","span","offset","style","marginBottom","onFinish","values","LoginHelper","onFinishFailed","errorInfo","strong","Item","rules","required","message","placeholder","Password","align","htmlType","shape","icon","LoginOutlined","size","onClick","LoginPage","Registration","valuePropName","href","wrapperCol","RegistrationPage","Confirmation","error","ConfirmationPage","Layout","Content","Sider","Select","Option","props","loginState","useSelector","state","useState","result","setResult","useEffect","GetCommunitiesRequest","then","options","map","item","label","value","defaultValue","width","onSelect","Search","Input","NavBar","profileMenu","SettingTwoTone","marginRight","LogoutOutlined","padding","verticalAlign","src","logo","preview","communities","marginTop","onSearch","enterButton","target","rel","MessageTwoTone","BellTwoTone","overlay","placement","className","e","preventDefault","UserOutlined","DownOutlined","Header","Anchor","Link","Footer","HomePage","backgroundColor","createBrowserHistory","PublicRoute","children","isAuthenticated","to","AuthRoute","Title","CreateCommunityRequest","communityName","level","mode","TextArea","Group","CreateCommunityPage","types","Form","useForm","communityId","textFieldNames","fields","filter","field","numberFieldNames","linkFieldNames","locationFieldNames","dateFieldNames","CreatePostTypeRequest","autoComplete","List","add","remove","key","fieldKey","restField","MinusCircleOutlined","PlusOutlined","CreatePostTypePage","useLocation","AboutCommunity","layout","bordered","column","description","undefined","members","created","communityID","useParams","GetCommunityPageRequest","RouteList","history","path","exact","element","replace","App","moment","initialState","loading","isActivated","LoginReducer","action","reducers","combineReducers","loginReducer","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94f2c66d.chunk.js","sourcesContent":["export const LOGIN = 'LOGIN';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const REGISTER = 'REGISTER';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAILURE = 'REGISTER_FAILURE';\nexport const LOGOUT = 'LOGOUT';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';","import {\n  LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE, \n  REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE, \n  LOGOUT, LOGOUT_SUCCESS, LOGOUT_FAILURE, \n} from '../types'\n\nexport function login(info) {\n  return {\n    type: LOGIN,\n    payload: info,\n  };\n}\n\nexport function loginSuccess(info) {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: info,\n  };\n}\n\nexport function loginFailure(info) {\n  return {\n    type: LOGIN_FAILURE,\n    payload: info,\n  };\n}\n\nexport function register(info) {\n  return {\n    type: REGISTER,\n    payload: info,\n  };\n}\n\nexport function registerSuccess(info) {\n  return {\n    type: REGISTER_SUCCESS,\n    payload: info,\n  };\n}\n\nexport function registerFailure() {\n  return {\n    type: REGISTER_FAILURE,\n  };\n}\n\nexport function logout() {\n  return {\n    type: LOGOUT,\n  };\n}\n\nexport function logoutSuccess() {\n  return {\n    type: LOGOUT_SUCCESS,\n  };\n}\n\nexport function logoutFailure(info) {\n  return {\n    type: LOGOUT_FAILURE,\n  };\n}","export const BASE_URL = 'https://api.cmpegroupthree.store/';\n\nexport const LOGIN_ENDPOINT = `${BASE_URL}auth/login`;\nexport const LOGOUT_ENDPOINT = `${BASE_URL}auth/logout`;\nexport const REGISTER_ENDPOINT = `${BASE_URL}auth/register`;\n\nexport const CREATE_COMMUNITY_ENDPOINT = `${BASE_URL}communities`;\nexport const GET_COMMUNITIES_ENDPOINT = `${BASE_URL}communities`;\nexport const GET_COMMUNITY_PAGE_ENDPOINT = `${BASE_URL}communities/detail`;\n\nexport const CREATE_POSTTYPE_ENDPOINT = `${BASE_URL}post-types`;","import axios from 'axios';\nimport {\n  LOGIN_ENDPOINT,\n  LOGOUT_ENDPOINT,\n  REGISTER_ENDPOINT,\n  CREATE_COMMUNITY_ENDPOINT,\n  GET_COMMUNITIES_ENDPOINT,\n  GET_COMMUNITY_PAGE_ENDPOINT,\n  CREATE_POSTTYPE_ENDPOINT\n} from './urls';\n\nexport async function login(info) {\n  const header = {headers: {\n    'X-Platform': 'WEB',\n    'accept': '*/*',\n  }}\n  const body= { username: info.username, password: info.password }\n  try {\n    const response = await axios.post(\n      LOGIN_ENDPOINT,\n      { ...body },\n      {...header}\n    );\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.log(error);\n    \n    return error\n  }\n}\n\nexport async function register(info) {\n  try {\n    const header = {headers: {\n      'X-Platform': 'WEB',\n      'accept': '*/*',\n    }}\n    const body= { username: info.username, email:info.email, password: info.password }\n    const response = await axios.post(\n      REGISTER_ENDPOINT,\n      { ...body },\n      {...header}\n    );\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.log(error);\n    \n    return error\n  }\n}\n\nexport async function logout(info) {\n  try {\n    const header = {headers: {\n      'X-Platform': 'WEB',\n      'accept': '*/*',\n      'authorization': `${info}`\n    }\n    }\n    const response = await axios.delete(LOGOUT_ENDPOINT, { ...header });\n    return response;\n  } catch (error) {\n    console.log(error);\n    \n    return error\n  }\n}\n\nexport async function createCommunity(info) {\n  try {\n    const header = {headers: {\n      'X-Platform': 'WEB',\n      'accept': '*/*',\n      'authorization': `${info.token}`\n      },\n    }\n    console.log(header);\n    const body= { name: info.name }\n    const response = await axios.post(CREATE_COMMUNITY_ENDPOINT, { ...body }, { ...header });\n    return response;\n  } catch (error) {\n    console.log(error);\n    \n    return error\n  }\n}\n\nexport async function createPostType(info, token) {\n  try {\n    const header = {headers: {\n      'X-Platform': 'WEB',\n      'accept': '*/*',\n      'authorization': `${token}`\n      },\n    }\n    console.log(header);\n    const body = { ... info }\n    const response = await axios.post(CREATE_POSTTYPE_ENDPOINT, { ...body }, { ...header });\n    return response;\n  } catch (error) {\n    console.log(error);\n    \n    return error\n  }\n}\n\n\nexport async function getCommunities(info) {\n  try {\n    const header = {headers: {\n      'X-Platform': 'WEB',\n      'accept': '*/*',\n      'authorization': `${info.token}`\n      },\n    }\n    console.log(header);\n    const response = await axios.get(GET_COMMUNITIES_ENDPOINT, { ...header });\n    return response;\n  } catch (error) {\n    console.log(error);\n    \n    return error\n  }\n}\n\nexport async function getCommunityPage(info) {\n  try {\n    const header = {headers: {\n      'x-platform': 'WEB',\n      'accept': '*/*',\n      'authorization': `${info.token}`\n      },\n    }\n    const response = await axios.get(GET_COMMUNITY_PAGE_ENDPOINT+\"?communityId=\"+info.id, { ...header });\n    console.log(response)\n    return response;\n  } catch (error) {\n    console.log(error);\n    \n    return error\n  }\n}\n","import * as loginAction from \"../store/actions/loginActions\";\nimport { login, logout, register,\n  createCommunity, getCommunities, getCommunityPage,\n  createPostType } from '../store/axios';\n\nexport const Login = async (info, dispatch) => {\n\n    dispatch(loginAction.login(info));\n    const response = await login(info);\n    if(response.status === 200 || response.status === 201){\n      dispatch(loginAction.loginSuccess(response));\n    }else{\n      dispatch(loginAction.loginFailure({email: '', password: ''}));\n    }\n}\n\nexport const Logout = async (info, dispatch) => {\n  dispatch(loginAction.logout());\n  const response = await logout(info);\n  if(response.status === 200 || response.status === 201){\n     dispatch(loginAction.logoutSuccess());\n  }else{\n    dispatch(loginAction.logoutFailure());\n  }\n}\n\nexport const Register = async (info, dispatch) => {\n    dispatch(loginAction.register(info));\n    const response = await register(info);\n    if(response.status === 200 || response.status === 201){\n      dispatch(loginAction.registerSuccess(info));\n    }else{\n      dispatch(loginAction.registerFailure());\n    }\n}\n\nexport const CreateCommunity = async (info, dispatch) => {\n  // dispatch(loginAction.logout());\n  const response = await createCommunity(info);\n  if(response.status === 200 || response.status === 201){\n    console.log(response.data.community.id);\n    return response.data.community.id;\n    //  dispatch(loginAction.logoutSuccess());\n  }else{\n    // dispatch(loginAction.logoutFailure());\n    return {}\n  }\n}\n\nexport const CreatePostType = async (info, token, dispatch) => {\n  // dispatch(loginAction.logout());\n  const response = await createPostType(info, token);\n  if(response.status === 200 || response.status === 201){\n    return response;\n    //  dispatch(loginAction.logoutSuccess());\n  }else{\n    // dispatch(loginAction.logoutFailure());\n    return {}\n  }\n}\n\n\nexport const GetCommunities = async (info, dispatch) => {\n  // dispatch(loginAction.logout());\n  const response = await getCommunities(info);\n  if(response.status === 200 || response.status === 201){\n    console.log(response.data);\n    return response\n    //  dispatch(loginAction.logoutSuccess());\n  }else{\n    // dispatch(loginAction.logoutFailure());\n    return {}\n  }\n}\n\nexport const GetCommunityPage = async (info, dispatch) => {\n  // dispatch(loginAction.logout());\n  const response = await getCommunityPage(info);\n  if(response.status === 200 || response.status === 201){\n    console.log(response.data);\n    return response\n    //  dispatch(loginAction.logoutSuccess());\n  }else{\n    // dispatch(loginAction.logoutFailure());\n    return {}\n  }\n}","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nimport { Form, Input, Row, Col, Button, Typography, Layout, Space } from 'antd';\n\nimport { useNavigate } from 'react-router-dom'\n\nimport React from \"react\";\nimport { useDispatch } from 'react-redux';\n\nimport {  Login as LoginHelper } from '../utils/helper';\n\nimport { LoginOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\n\nconst { Text } = Typography;\n\nconst subButtonStyle = {\n  fontSize: '12px',\n  color: '#8b949e',\n  cursor: 'pointer'\n}\n\nconst Login = () => {\n\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  const onFinish = (values) => {\n    console.log('Success:', values);\n    LoginHelper({username: values.username, password: values.password}, dispatch)\n    navigate('/home')\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const sendToRegistration = () => {\n    console.log('Sending to registration');\n  }\n\n  const sendToResetPassword = () => {\n    console.log('Sending to reset password');\n  }\n\n  return (\n    <Row gutter={[0, 16]}>\n      <Col span={24}></Col>\n      <Col span={6} offset={9}>\n        <Form\n          style={{marginBottom: '20px'}}\n          name=\"basic\"\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n          <Text strong>Username or Email</Text>\n          <Form.Item\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: 'Please enter your username or email.',\n              },\n            ]}\n          >\n            <Input placeholder=\"Enter username or email\" />\n          </Form.Item>\n\n          <Text strong>Password</Text>\n          <Form.Item\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: 'Please enter your password.',\n              },\n            ]}\n          >\n          <Input.Password placeholder=\"Enter password\" />\n          </Form.Item>\n\n          <Col span={24} align=\"middle\">\n              <Button type=\"primary\" htmlType=\"submit\" shape=\"round\" icon={<LoginOutlined />}>\n                  Login\n              </Button>\n          </Col>\n        </Form>\n        <Col span={24} align=\"middle\">\n          <Space size={'large'}>\n            <Text style={subButtonStyle} onClick={sendToResetPassword}>Forgot your password?</Text>\n            <Text style={subButtonStyle} onClick={sendToRegistration}>Don't have an account?</Text>\n          </Space>\n        </Col>\n      </Col >\n    </Row >\n  )\n}\n\nexport default Login;","import Login from '../components/Login'\nimport React from \"react\";\n\nfunction LoginPage() {\n\n  return (\n    <div>\n      <Login />\n    </div>\n  );\n}\n\nexport default LoginPage;\n","import React, { useEffect, useState } from 'react';\nimport { Form, Input, Button, Checkbox, Typography, Row, Col } from 'antd';\nimport 'antd/dist/antd.css';\n\nimport { useDispatch } from 'react-redux';\nimport {  Register } from '../utils/helper';\n\nconst {Text} = Typography;\n\nconst Registration = () => {\n  const dispatch = useDispatch();\n  const onFinish = (values) => {\n    console.log('Success:', values);\n    Register(values, dispatch)\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <Row gutter={[0, 16]}>\n      <Col span={24}></Col>\n      <Col span={6} offset={9}>\n        <Form\n          name=\"basic\"\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        > \n        <Text strong>Username</Text>\n          <Form.Item\n            name=\"username\"\n            required\n            rules={[\n              {\n                required: true,\n                message: 'Please input your username!',\n              },\n            ]}\n          >\n            <Input placeholder=\"Enter username\" />\n          </Form.Item>\n\n          <Text strong>Email</Text>\n          <Form.Item\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your e-mail!',\n              },\n            ]}\n          >\n            <Input placeholder=\"Enter email\" />\n          </Form.Item>\n\n          <Text strong>Password</Text>\n          <Form.Item\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n            ]}\n          >\n            <Input.Password placeholder=\"Enter password\" />\n          </Form.Item>\n\n          <Text strong>Password </Text>\n          <Form.Item\n            name=\"passwordSecond\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your password again!',\n              },\n            ]}\n          >\n            <Input.Password placeholder=\"Enter password again\" />\n          </Form.Item>\n\n          <Form.Item\n            name=\"terms\"\n            valuePropName=\"checked\"\n            required\n          >\n            <Checkbox required><a href=\"##\">Accepting the terms of GPDR and KVKK</a></Checkbox>\n          </Form.Item>\n\n          <Form.Item\n            wrapperCol={{\n              offset: 4,\n          }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\" shape=\"round\">\n              Submit Registration Form\n            </Button>\n          </Form.Item>\n        </Form>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Registration;","import Registration from '../components/Registration'\nimport React from \"react\";\n\nfunction RegistrationPage() {\n\n  return (\n    <div>\n      <Registration />\n    </div>\n  );\n}\n\nexport default RegistrationPage;\n","import React from 'react';\nimport { Row, Col, Typography, Form, Input, Button } from 'antd';\nimport 'antd/dist/antd.css';\n\nconst { Text } = Typography;\n\nconst Confirmation = () => {\n    \n    const onFinish = (values) => {\n        console.log(\"Success: \", values)\n    }\n\n    const onFinishFailed = (error) => {\n        console.log(\"Failed: \", error);\n    }\n\n    const handleCodeResend = () => {\n        console.log(\"Confirmation code resend requested.\");\n    }\n\n    return( \n        <div>\n            <Row gutter={[0, 16]}>\n                <Col span={24}></Col>\n                <Col span={8} offset={8} align=\"middle\">\n                    <Form \n                        name=\"basic\" \n                        onFinish={onFinish} \n                        onFinishFailed={onFinishFailed}\n                    >\n                    <Text strong=\"true\">Enter your confirmation code below:</Text>\n                        <Form.Item \n                            name=\"confirmationCode\" \n                            rules={[\n                                {\n                                    required:true,\n                                    message: \"Please input your confirmation code!\"\n                                }\n                            ]}\n                        > \n                            <Input placeholder=\"Confirmation Code\"/>\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" shape=\"round\" htmlType=\"submit\">\n                                Submit\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Col>\n                <Col span={24} align=\"middle\">\n                    <Button type=\"default\" shape=\"round\" onClick={handleCodeResend}>\n                        Did not receive the code? \n                    </Button>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n \nexport default Confirmation;","import Confirmation from '../components/Confirmation'\nimport React from \"react\";\n\nfunction ConfirmationPage() {\n\n  return (\n    <div>\n      <Confirmation />\n    </div>\n  );\n}\n\nexport default ConfirmationPage;\n","import React from \"react\";\nimport { Form, Input, Button, DatePicker, Typography, Row, Col } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nconst { Text } = Typography;\n\nconst CreatePostForm = () => {\n  const onFinish = (values) => {\n    console.log(\"Success:\", values);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Col gutter={[0, 16]}>\n      <Col span={24}></Col>\n      <Form name=\"basic\" onFinish={onFinish} onFinishFailed={onFinishFailed}>\n        <Row>\n          <Col span={8}>\n            <Text style={{ paddingRight: \"30px\" }} strong>\n              Share Event Post\n            </Text>\n          </Col>\n          <Col span={8}>\n            <Form.Item\n              name=\"share\"\n              required\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your username!\",\n                },\n              ]}\n            >\n              <Input placeholder=\"Enter username\" />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={8}>\n            <Text style={{ paddingRight: \"30px\" }} strong>\n              Event Name\n            </Text>\n          </Col>\n          <Col span={8}>\n            <Form.Item\n              name=\"name\"\n              required\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your username!\",\n                },\n              ]}\n            >\n              <Input placeholder=\"Enter username\" />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={8}>\n            <Text style={{ paddingRight: \"30px\" }} strong>\n              Event Time\n            </Text>\n          </Col>\n          <Col span={8}>\n            <Form.Item\n              name=\"time\"\n              required\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your username!\",\n                },\n              ]}\n            >\n              <DatePicker  />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={8}>\n            <Text style={{ paddingRight: \"30px\" }} strong>\n              Description\n            </Text>\n          </Col>\n          <Col span={8}>\n            <Form.Item\n              name=\"description\"\n              required\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your username!\",\n                },\n              ]}\n            >\n              <Input placeholder=\"Enter username\" />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={8}>\n            <Text style={{ paddingRight: \"30px\" }} strong>\n              Location\n            </Text>\n          </Col>\n          <Col span={8}>\n            <Form.Item\n              name=\"location\"\n              required\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your username!\",\n                },\n              ]}\n            >\n              <Input placeholder=\"Enter username\" />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Col span={24}>\n        <Form.Item\n            wrapperCol={{\n              offset: 4,\n          }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\" shape=\"round\">\n              Create Post\n            </Button>\n          </Form.Item>\n        </Col>\n      </Form>\n    </Col>\n  );\n};\n\nexport default CreatePostForm;\n","import React from 'react';\nimport { Layout, Menu } from 'antd';\nimport CreatePostForm from \"./CreatePostForm\";\n\nconst { Content, Sider } = Layout;\n\nconst CreatePost = () => {\n  \n  return (\n  <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n    <Sider className=\"site-layout-background\" width={200}>\n      <Menu\n        mode=\"inline\"\n        defaultSelectedKeys={['2']}\n        style={{ height: '100%' }}\n      >\n          <Menu.Item key=\"0\" disabled>Post Types</Menu.Item>\n          <Menu.Item key=\"1\">Lost</Menu.Item>\n          <Menu.Item key=\"2\">Event</Menu.Item>\n          <Menu.Item key=\"3\">Sale</Menu.Item>\n          <Menu.Item key=\"4\">Lesson</Menu.Item>\n        \n      </Menu>\n    </Sider>\n    <Content style={{ padding: '0 24px', minHeight: 280 }}><CreatePostForm /></Content>\n  </Layout>\n  );\n}\n\nexport default CreatePost;","export default __webpack_public_path__ + \"static/media/logo.145c7935.png\";","import React, { useParams, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Select } from 'antd';\nimport { GetCommunities as GetCommunitiesRequest } from '../utils/helper';\n\nconst { Option } = Select;\n\nconst GetCommunities = (props) => {\n    const loginState = useSelector((state) => state.login);\n    const navigate = useNavigate() \n    const dispatch = useDispatch()\n    \n    const [result, setResult] = useState([]);\n  \n    useEffect(() => {\n        GetCommunitiesRequest({token: loginState.token}, dispatch)\n        .then( result => setResult(result.data));\n    }, [])\n\n    console.log(\"navbar select: \",result)\n\n    let options = result.map(item => {\n        return {\n            label: item.name,\n            value: item.id\n        }\n    })\n\n    function handleChange(value) {\n        console.log(`selected ${value}`);\n        navigate(`/communities/${value}`);\n    }\n\n    return ( \n        <Select \n            defaultValue=\"Communities\" \n            style={{ width: 120 }} \n            options={options} \n            onSelect={handleChange}\n        >\n        </Select>\n     );\n}\n \nexport default GetCommunities;","import React from 'react';\nimport { Row, Col, Input, Image, Button, Dropdown, Menu, Space } from 'antd';\nimport { HomeTwoTone, MessageTwoTone, BellTwoTone, UserOutlined, DownOutlined, SettingTwoTone, LogoutOutlined, RightCircleFilled } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport { Logout } from '../utils/helper';\nimport { logout } from '../store/actions/loginActions';\nimport logo from '../utils/logo.png'\nimport GetCommunities from './GetCommunities'\n\nconst { Search } = Input;\n\nconst NavBar = (props) => {\n\n    const loginState = useSelector((state) => state.login);\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n\n    const onSearch = value => {\n        console.log(\"Searching value: \", value);\n    }\n\n    const handleLogout = () => {\n        console.log(\"Trying to log out\");\n        Logout(loginState.token, dispatch)\n        navigate('/login')\n    }\n\n    const onCreateCommunity = () => {\n        console.log(\"Request for creating a new community\");\n        navigate('/createCommunity')\n    }\n\n    const onCreatePost = () => {\n        console.log(\"Request for creating a new post\");\n    }\n\n    const profileMenu = (\n        <Menu>\n            <Menu.Item key=\"settings\">\n                <Button type=\"text\">\n                    <SettingTwoTone style={{ fontSize: '16px', marginRight: '4px' }} />\n                    Settings\n                </Button>\n            </Menu.Item>\n            <Menu.Item key=\"logout\">\n                <Button type=\"text\" onClick={handleLogout}>\n                    <LogoutOutlined style={{ fontSize: '16px', marginRight: '4px' }} />\n                    Logout\n                </Button>\n            </Menu.Item>\n        </Menu>\n    );\n\n    return (\n        <div>\n            <Row style={{ padding: '4px 16px 4px 16px' }}>\n                <Col span={10} verticalAlign='top'>\n                    <Space size='middle'>\n                        <Image src={logo} style={{ cursor: 'pointer' }} width={40} preview={false} onClick={() => { navigate('/home') }} />\n                        <GetCommunities communities={props.communities} />\n                        <Button shape=\"round\" onClick={onCreateCommunity}>\n                            Create Community\n                        </Button>\n                        <Button shape=\"round\" onClick={onCreatePost}>\n                            Create Post\n                        </Button>\n                    </Space>\n                </Col>\n                <Col span={10}>\n                    <Search style={{ marginTop: '9px' }} placeholder=\"input search text\" onSearch={onSearch} enterButton />\n                </Col>\n                <Col span={4} align=\"right\">\n                    <Space size=\"middle\">\n                        <a target=\"_blank\" rel=\"noopener noreferrer\">\n                            <MessageTwoTone style={{ fontSize: '32px' }} />\n                        </a>\n                        <a target=\"_blank\" rel=\"noopener noreferrer\">\n                            <BellTwoTone style={{ fontSize: '32px' }} />\n                        </a>\n                        <Dropdown overlay={profileMenu} placement=\"bottomLeft\">\n                            <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                                <UserOutlined style={{ fontSize: '32px' }} />\n                                <DownOutlined />\n                            </a>\n                        </Dropdown>\n                    </Space>\n\n                </Col>\n            </Row>\n            <hr />\n        </div>\n    );\n}\n\nexport default NavBar;","import CreatePost from '../components/CreatePost'\nimport React from \"react\";\nimport { Layout,  } from 'antd';\nimport NavBar from '../components/NavBar'\nimport Post from '../components/Post'\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nfunction HomePage() {\n  return (\n    <>\n    \n      <Layout>\n        <Header style={{backgroundColor: '#3949ab'}}><NavBar /></Header>\n        <Layout>\n          <Content>Posts</Content>\n        </Layout>\n        <Footer></Footer>\n      </Layout>\n    </>\n  );\n}\n\nexport default HomePage;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Typography, Space, Image } from 'antd';\nimport '../App.css';\n\nimport React from \"react\";\n\nimport 'antd/dist/antd.css';\n\nimport { Anchor } from 'antd';\n\nconst { Link } = Anchor;\n\nconst { Text } = Typography;\n\nconst FieldContent = (props) => {\n\n  console.log(props)\n\n  const renderContentTypeSwitch = () => {\n    switch (props.fieldContent.type) {\n      case 'text':\n        return <>\n        <Space size={'small'} align=\"start\">\n          <strong>{props.fieldContent.title}</strong>\n          {props.fieldContent.content}\n          </Space>\n        </>\n      case 'number':\n        return <>\n        <Space size={'small'} align=\"start\">\n          <strong>{props.fieldContent.title}</strong>\n          {props.fieldContent.content}\n          </Space>\n        </>\n      case 'imageURL':\n        return <>\n        <Space size={'small'} align=\"start\">\n          <strong>{props.fieldContent.title}</strong>\n          <Image\n          width={300}\n          src={props.fieldContent.content}\n        />\n        </Space>\n        </>\n      case 'location':\n        return <>\n        <Space size={'small'} align=\"start\">\n        <strong>{props.fieldContent.title}</strong>\n          {props.fieldContent.content}\n        </Space>\n          \n        </>\n      case 'date':\n        return <>\n          <Space size={'small'} align=\"start\">\n            <strong>{props.fieldContent.title}</strong>\n            {props.fieldContent.content}\n          </Space>\n          </>\n      case 'link':\n        return <>\n        <Space size={'small'} align=\"start\">\n        <strong>{props.fieldContent.title}</strong>\n          <a href={props.fieldContent.content} target=\"_blank\">{props.fieldContent.content}</a>\n        </Space>\n        </>\n      default:\n        return <></>\n    }\n  }\n\n  return (\n    <>\n      {renderContentTypeSwitch()}\n    </>\n  )\n}\n\nexport default FieldContent","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Card, Row, Col, Button, Typography, Space, Avatar } from 'antd';\nimport '../App.css';\nimport FieldContent from './FieldContent';\n\n\nimport React from \"react\";\n\nimport { LikeOutlined, LikeFilled, CommentOutlined, FlagOutlined, FlagFilled } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\n\nconst { Text } = Typography;\n\nconst Post = (props) => {\n\n  console.log(props)\n\n  let contentFields = props.postObj.fieldContents.map((fieldContent) => {\n    return <FieldContent fieldContent={fieldContent} />\n  })\n\n  let dataTypeStyle = {\n    backgroundColor: props.postObj.dataType.color,\n    paddingLeft: '8px',\n    paddingRight: '8px',\n    borderRadius: '20px',\n    cursor: 'pointer',\n    marginButtom: '8px'\n  }\n\n  let postCardStyle = {\n    width: '100%',\n    backgroundColor: '#f8f8f8',\n    borderRadius: '20px'\n  }\n\n  const [isLiked, setLiked] = useState(props.postObj.isLiked)\n\n  const likePost = (postId) => {\n    console.log(`Trying to like post, send a POST request to posts/${postId}/likes`);\n    setLiked(true)\n  }\n\n  const revertLikePost = (postId) => {\n    console.log(`Trying to revert the like on a post, send a DELETE request to posts/${postId}/likes`);\n    setLiked(false)\n  }\n\n  const getPost = (postId) => {\n    console.log(`Trying to open post information, send GET request to post/${postId}`);\n  }\n\n  const getUser = (userId) => {\n    console.log(`Trying to open user profile, send GET request to users/${userId}`)\n  }\n\n  const getCommunity = (communtiyId) => {\n    console.log(`Trying to open community, send GET request to communitites/${communtiyId}`)\n  }\n\n  const getDataType = (dataTypeId) => {\n    console.log(`Trying to open posts with data types, send GET request to posts/?dataType=${dataTypeId}`)\n  }\n\n  const reportPost = (postId) => {\n    console.log(`Trying to report post, open post report selection component with ${postId}`)\n  }\n\n  return (\n    <>\n      <Card size=\"small\" style={postCardStyle}>\n        <Row>\n          <Space size={'middle'}>\n            <Col>\n\n              <Avatar size={50} style={{cursor: 'pointer'}} src={props.postObj.profilePicture} onClick={() => getUser(props.postObj.userId)} />\n            </Col>\n            <Col>\n              <Row>\n                <Col>\n                  <Space size={'large'}>\n                    <h3><strong\n                      onClick={() => getPost(props.postObj.id)}\n                      style={{ cursor: 'pointer' }}>\n                      {props.postObj.title}\n                    </strong></h3>\n                  </Space>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Space size={'small'}>\n                    <Space size={'small'}>\n                      Posted by\n                      <strong\n                        onClick={() => getUser(props.postObj.userId)}\n                        style={{ cursor: 'pointer' }}>\n                        {props.postObj.username}\n                      </strong>\n                    </Space>\n                    <Space size={'small'}>\n                      • Posted in\n                      <strong\n                        onClick={() => getCommunity(props.postObj.communityId)}\n                        style={{ cursor: 'pointer' }}>\n                        {props.postObj.communityName}\n                      </strong>\n                    </Space>\n                    • {props.postObj.createdAt}ago • \n                    <strong\n                      style={dataTypeStyle}\n                      onClick={() => getDataType(props.postObj.dataType.id)}>\n                      {props.postObj.dataType.name}\n                    </strong>\n                  </Space>\n                </Col>\n              </Row>\n\n            </Col>\n          </Space>\n        </Row>\n        <Row>\n          <Card size=\"small\" style={{ width: '100%', borderRadius: '10px', borderColor: '#ffffff', marginTop: \"10px\", marginBottom: \"10px\"}}>\n            <Space direction=\"vertical\">\n              {contentFields}\n            </Space>\n          </Card>\n        </Row>\n        <Row>\n          <Col span={8} align=\"middle\">\n            {isLiked ?\n              <Button type=\"text\" icon={<LikeOutlined />} onClick={() => likePost(props.postObj.id)}></Button> :\n              <Button type=\"text\" icon={<LikeFilled />} onClick={() => revertLikePost(props.postObj.id)}></Button>\n            }\n            {props.postObj.likeCount} Likes\n          </Col>\n\n          <Col span={8} align=\"middle\">\n            <Button type=\"text\" icon={<CommentOutlined />} onClick={() => getPost(props.postObj.communityId)}></Button>\n            {props.postObj.commentCount} Comments\n          </Col>\n\n          <Col span={8} align=\"middle\">\n            <Button type=\"text\" icon={<FlagOutlined />} onClick={() => reportPost(props.postObj.id)}></Button>\n            Report\n          </Col>\n        </Row>\n      </Card>\n    </>\n  )\n}\n\nexport default Post","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","/* eslint-disable no-debugger */\nimport React from 'react';\nimport {\n  Navigate\n} from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n\nexport default function PublicRoute({ children }) {\n  const {  isAuthenticated } = useSelector((state) => state.login);\n  return !isAuthenticated ? children : <Navigate to=\"/home\" />;\n}\n","/* eslint-disable no-debugger */\nimport React from 'react';\nimport {\n  Navigate\n} from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n\nexport default function AuthRoute({ children }) {\n  const {  isAuthenticated } = useSelector((state) => state.login);\n  return isAuthenticated ? children : <Navigate to=\"/login\" />;\n}\n","import React from 'react';\nimport { Row, Col, Form, Input, Typography, Button, Radio, Select } from 'antd';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport { CreateCommunity as CreateCommunityRequest } from '../utils/helper';\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\n\nconst CreateCommunity = (props) => {\n    const loginState = useSelector((state) => state.login);\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n\n    const onFinish = async (values) => {\n        console.log(\"Success: \", values);\n        \n        const id = await CreateCommunityRequest({name: values.communityName, token: loginState.token}, dispatch);\n        navigate(`/communities/${id}`)\n    }\n    const onFinishFailed = (error) => {\n        console.log(\"Failed: \",error);\n    }\n\n    return ( \n        <div>\n            <Row>\n                <Col span={24} align=\"middle\">\n                    <Title level={2} strong=\"true\">Create a new community</Title>\n                </Col>\n                <Col span={10} offset={7} align=\"middle\">\n                    <Form\n                        name=\"basic\"\n                        onFinish={onFinish}\n                        onFinishFailed={onFinishFailed}\n                    >\n                        <Text strong=\"true\">Name</Text>\n                        <Form.Item\n                            name=\"communityName\"\n                            rules={[\n                                {\n                                    required:true,\n                                    message: \"Community name cannot be empty!\"\n                                }\n                            ]}\n                        > \n                            <Input placeholder=\"Community Name\"/>\n                        </Form.Item>\n                        \n                        <Text strong=\"true\">Topics</Text>\n                        <Form.Item\n                            name=\"topics\"\n                            rules={[\n                                { \n                                    required: true, message: 'Please choose at least one topic!', type: 'array' \n                                }\n                            ]}\n                        >\n                            <Select mode=\"multiple\">\n                                <Option value=\"1\">Topic 1</Option>\n                                <Option value=\"2\">Topic 2</Option>\n                                <Option value=\"3\">Topic 3</Option>\n                            </Select>\n                        </Form.Item>\n                        \n                        <Text strong=\"true\">Description</Text>\n                        <Form.Item\n                            name=\"description\"\n                        >\n                            <Input.TextArea/>\n                        </Form.Item>\n\n                        <Text strong=\"true\">Community Type</Text>\n                        <Form.Item \n                            name=\"communityType\"\n                            rules={[\n                                {\n                                    required:true,\n                                    message: \"Please choose the community type!\"\n                                }\n                            ]}\n                        >\n                            <Radio.Group>\n                            <Radio value=\"public\">Public</Radio>\n                            <Radio value=\"private\">Private</Radio>\n                            </Radio.Group>\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" shape=\"round\" htmlType=\"submit\">\n                                Submit\n                            </Button>\n                        </Form.Item>\n                    \n                    </Form>\n                </Col>\n            </Row>         \n        </div>\n     );\n}\n \nexport default CreateCommunity;","import CreatePost from '../components/CreatePost'\nimport React from \"react\";\nimport { Layout,  } from 'antd';\nimport NavBar from '../components/NavBar';\nimport CreateCommunity from '../components/CreateCommunity';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nfunction CreateCommunityPage() {\n  return (\n    <>\n    \n      <Layout>\n        <Header style={{backgroundColor: '#3949ab'}}><NavBar /></Header>\n        <Layout>\n          <Content><CreateCommunity /></Content>\n        </Layout>\n        <Footer></Footer>\n      </Layout>\n    </>\n  );\n}\n\nexport default CreateCommunityPage;\n","import React from 'react';\nimport { Row, Col, Form, Input, Typography, Button, Radio, Select, Space } from 'antd';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport { CreatePostType as CreatePostTypeRequest } from '../utils/helper';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\nconst types = [\n  { label: 'text', value: 'text' },\n  { label: 'number', value: 'number' },\n  { label: 'link', value: 'link' },\n  { label: 'date', value: 'date' },\n  { label: 'lacation', value: 'location' },\n];\n\nconst CreatePostType = (props) => {\n  const loginState = useSelector((state) => state.login);\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const [form] = Form.useForm();\n\n  const onFinish = async (values) => {\n\n    values.communityId = props.id;\n\n    console.log('Received values of form:', values);\n    values.textFieldNames = values.fields.filter(field => field.type == 'text').map(item => { return item.name })\n    values.numberFieldNames = values.fields.filter(field => field.type == 'number').map(item => { return item.name })\n    values.linkFieldNames = values.fields.filter(field => field.type == 'link').map(item => { return item.name })\n    values.locationFieldNames = values.fields.filter(field => field.type == 'date').map(item => { return item.name })\n    values.dateFieldNames = values.fields.filter(field => field.type == 'location').map(item => { return item.name })\n\n    delete values.fields;\n\n    await CreatePostTypeRequest(values, loginState.token, dispatch);\n    navigate(`/communities/`)\n  }\n\n\n  return (\n    <Row>\n      <Col offset={6} span={12} style={{marginTop: \"20px\"}}>\n        <Form name=\"dynamic_form_nest_item\" onFinish={onFinish} autoComplete=\"off\">\n          <label>Post Type Name</label>\n          <Form.Item\n            name=\"name\"\n            rules={[\n              {\n                required: true,\n                message: \"Post type name cannot be empty!\"\n              }\n            ]}\n          >\n            <Input placeholder=\"Post type name\" size='middle' />\n          </Form.Item>\n          <Form.List name=\"fields\">\n            {(fields, { add, remove }) => (\n              <>\n                {fields.map(({ key, name, fieldKey, ...restField }) => (\n                  <Col span={24} align=\"middle\">\n                    <Space key={key}>\n                      <Form.Item\n                        {...restField}\n                        name={[name, 'type']}\n                        fieldKey={[fieldKey, 'type']}\n                        rules={[{ required: true, message: 'Missing type' }]}\n                      >\n                        <Select options={types} style={{ width: 120 }}></Select>\n                      </Form.Item>\n                      <Form.Item\n                        {...restField}\n                        name={[name, 'name']}\n                        fieldKey={[fieldKey, 'name']}\n                        rules={[{ required: true, message: 'Missing field name' }]}\n                      >\n                        <Input placeholder=\"Field name\"/>\n                      </Form.Item>\n                      <MinusCircleOutlined onClick={() => remove(name)} />\n                    </Space>\n                  </Col>\n                ))}\n                <Form.Item>\n                  <Col span={24} align=\"middle\">\n                    <Button type=\"dashed\" shape=\"round\" onClick={() => add()} icon={<PlusOutlined />}>\n                      Add field\n                    </Button>\n                  </Col>\n                </Form.Item>\n              </>\n            )}\n          </Form.List>\n          <Form.Item >\n            <Col span={24} align=\"middle\">\n              <Button type=\"primary\" shape=\"round\" htmlType=\"submit\">\n                Create Post Type\n              </Button>\n            </Col>\n          </Form.Item>\n        </Form>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CreatePostType;","import React from \"react\";\nimport { Layout } from 'antd';\nimport NavBar from '../components/NavBar';\nimport CreatePostType from '../components/CreatePostType';\nimport { useLocation } from 'react-router';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nfunction CreatePostTypePage(props) {\n\n    const { state } = useLocation();\n    const { id } = state;\n\n  return (\n    <>\n    \n      <Layout>\n        <Header style={{backgroundColor: '#3949ab'}}><NavBar /></Header>\n        <Layout>\n          <Content><CreatePostType id={id}/></Content>\n        </Layout>\n        <Footer></Footer>\n      </Layout>\n    </>\n  );\n}\n\nexport default CreatePostTypePage;\n","import React from 'react';\nimport { Col, Descriptions, Button } from 'antd';\n\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router';\n\nimport 'antd/dist/antd.css';\n\nconst AboutCommunity = (props) => {\n\n    const navigate = useNavigate()\n\n    console.log(props)\n\n    return ( \n        <div style={{width: \"20vw\"}}>\n            <Col span={24} align=\"middle\">\n                <Button shape=\"round\" type='primary'>Follow Community</Button>\n            </Col>\n            <Descriptions layout=\"vertical\" bordered size=\"small\" column={1}>\n                <Descriptions.Item label=\"About Community\">{props.description}</Descriptions.Item>\n                <Descriptions.Item label=\"Members\">{props.members === undefined ? \"No members\" : props.members + \"people\"}</Descriptions.Item>\n                <Descriptions.Item label=\"Created in\">{props.created}</Descriptions.Item>\n            </Descriptions>\n            <Col span={24} align=\"middle\">\n                <Button shape=\"round\" type='primary' onClick={() => navigate(`/createPostType`,{ state: { id: props.communityID }})}> Create Post Type</Button>\n            </Col>\n        </div>\n     );\n}\n \nexport default AboutCommunity;","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Layout, Col  } from 'antd';\nimport NavBar from '../components/NavBar';\nimport AboutCommunity from '../components/AboutCommunity';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport { GetCommunityPage as GetCommunityPageRequest } from \"../utils/helper\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nfunction GetCommunityPage(props) {\n\n  const loginState = useSelector((state) => state.login);\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  const { id } = useParams();\n  \n  const [result, setResult] = useState('');\n\n  useEffect(() => {\n    GetCommunityPageRequest({id: id, token: loginState.token}, dispatch)\n      .then( result => setResult(result.data.name));\n  }, [])\n\n  console.log(result);\n\n  return (\n    <> \n      <Layout>\n        <Header style={{backgroundColor: '#3949ab'}}><NavBar /></Header>\n        <Layout>\n          <Content>\n            <Col span={24} align=\"right\">\n              <AboutCommunity description={result} members=\"123 (placeholder)\" created=\"16.11.2021 (placeholder)\" communityID={id}/>\n            </Col>\n          </Content>\n        </Layout>\n        <Footer></Footer>\n      </Layout>\n    </>\n  );\n}\n\nexport default GetCommunityPage;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Navigate\n} from \"react-router-dom\";\nimport LoginPage from '../pages/LoginPage';\nimport RegistrationPage from '../pages/RegistrationPage';\nimport ConfirmationPage from '../pages/ConfirmationPage';\nimport HomePage from '../pages/HomePage';\nimport history from '../history';\nimport PublicRoute from './PublicRoute';\nimport AuthRoute from \"./AuthRoute\";\nimport CreateCommunityPage from '../pages/CreateCommunityPage';\nimport CreatePostTypePage from '../pages/CreatePostTypePage';\nimport GetCommunityPage from '../pages/GetCommunityPage';\n\n\nexport default function RouteList() {\n  return (\n    <Router history={history}>\n      <Routes>\n        <Route path=\"/login\" exact element={<PublicRoute><LoginPage/></PublicRoute>} />\n        <Route path=\"/register\" exact element={<PublicRoute><RegistrationPage/></PublicRoute>} />\n        <Route path=\"/confirmation\" exact element={<PublicRoute><ConfirmationPage/></PublicRoute>} />\n        <Route path=\"/home\" exact element={<AuthRoute><HomePage/></AuthRoute>} />\n        <Route path=\"/createCommunity\" exact element={<AuthRoute><CreateCommunityPage /></AuthRoute>} />\n        <Route path=\"/createPostType\" exact element={<AuthRoute><CreatePostTypePage /></AuthRoute>} />\n        <Route path=\"/communities/:id\" element={<AuthRoute><GetCommunityPage /></AuthRoute>} />\n        <Route path=\"*\" element={<Navigate replace to=\"/login\" />} />\n      </Routes>\n    </Router>\n  );\n}\n","import React from 'react';\nimport { Form, Input, Button, Checkbox, Typography, Row, Col, Switch, DatePicker, Upload, Avatar, Divider } from 'antd';\nimport 'antd/dist/antd.css';\n\nimport { TeamOutlined, LockOutlined, SaveOutlined, UserOutlined, CheckOutlined, CloseOutlined} from '@ant-design/icons';\n\nimport buttonColor from '../colors'\n\nconst { Text, Title } = Typography;\nconst { TextArea } = Input;\n\nconst ProfileEdit = (props) => {\n\n  \n  console.log(props)\n\n  const onFinish = (values) => {\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <Row gutter={[0, 16]}>\n      <Col span={24}></Col>\n      <Col span={12} offset={6}>\n        <Row>\n          <Col span={12}>\n            <Title level={4}>Profile Settings</Title>\n          </Col>\n          <Col span={11} offset={1}>\n            <Title level={4}>Privacy Settings</Title>\n          </Col>\n        </Row>\n\n        <Form\n          name=\"basic\"\n          initialValues={\n            props.userObj\n          }\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n\n          <Text strong>Profile Picture</Text>\n          <Row>\n            <Col span={12}>\n              <Form.Item name=\"profilePicture\">\n                <Avatar size={64} icon={<UserOutlined />} />\n              </Form.Item>\n            </Col>\n            <Col span={11} offset={1}>\n              <Form.Item name=\"isProfilePicturePublic\" valuePropName=\"checked\">\n                <Switch style={buttonColor}\n                  checkedChildren={<TeamOutlined />}\n                  unCheckedChildren={<LockOutlined />}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n\n\n          <Col span={12}>\n            <Text strong>Username</Text>\n            <Form.Item\n              name=\"username\"\n              required\n              rules={[\n                {\n                  required: true,\n                  message: 'Please enter your username',\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n          </Col>\n\n          <Text strong>Bio</Text>\n          <Row>\n            <Col span={12}>\n              <Form.Item name=\"bio\">\n                <TextArea rows={4} placeholder=\"Enter bio\" />\n              </Form.Item>\n            </Col>\n            <Col span={11} offset={1}>\n              <Form.Item name=\"isBioPublic\" valuePropName=\"checked\">\n                <Switch style={buttonColor}\n                  checkedChildren={<TeamOutlined />}\n                  unCheckedChildren={<LockOutlined />}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n\n\n          <Text strong>Birthday</Text>\n          <Row>\n            <Col span={12}>\n              <Form.Item name=\"birthday\">\n                <DatePicker />\n              </Form.Item>\n            </Col>\n            <Col span={11} offset={1}>\n              <Form.Item name=\"isBirthdayPublic\" valuePropName=\"checked\">\n                <Switch style={buttonColor}\n                  checkedChildren={<TeamOutlined />}\n                  unCheckedChildren={<LockOutlined />}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Text strong>Location</Text>\n          <Row>\n            <Col span={12}>\n              <Form.Item name=\"location\">\n                <Input placeholder=\"Enter location\" />\n              </Form.Item>\n            </Col>\n            <Col span={11} offset={1}>\n              <Form.Item name=\"isLocationPublic\" valuePropName=\"checked\">\n                <Switch style={buttonColor}\n                  checkedChildren={<TeamOutlined />}\n                  unCheckedChildren={<LockOutlined />}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col span={12}>\n              <Text>Other users must send me a request to follow my profile</Text>\n            </Col>\n            <Col span={11} offset={1}>\n              <Form.Item name=\"isProfilePublic\" valuePropName=\"checked\">\n                <Switch style={buttonColor}\n                  checkedChildren={<CheckOutlined  />}\n                  unCheckedChildren={<CloseOutlined />}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n\n\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" shape=\"round\" icon={<SaveOutlined />} style={buttonColor}>\n              Save Profile\n            </Button>\n          </Form.Item>\n        </Form>\n      </Col>\n    </Row>\n  );\n}\n\nexport default ProfileEdit;","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Card, Row, Col, Button, Typography, Space, Avatar, Tooltip, notification } from 'antd';\nimport '../App.css';\nimport FieldContent from './FieldContent';\nimport buttonColor from '../colors'\n\n\nimport React from \"react\";\n\nimport { UserAddOutlined, UserDeleteOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\n\nconst { Text, Title } = Typography;\n\n\n\nconst ProfileView = (props) => {\n\n    console.log(props)\n\n    let profileCardStyle = {\n        width: '100%',\n        backgroundColor: '#f8f8f8',\n        borderRadius: '20px'\n    }\n\n    const [isFollowing, setFollowing] = useState(props.userObj.isFollowing)\n\n    const followUser = (userId) => {\n        console.log(`Trying to follow user, send a POST request to users/${userId}/follow`);\n        if (props.userObj.isProfilePublic) {\n            setFollowing(true)\n        } else {\n            notification.success({\n                message: 'Follow request sent!',\n            });\n        }\n    }\n\n    const stopFollowingUser = (userId) => {\n        console.log(`Trying to stop following user, send a DELETE request to users/${userId}/follow`);\n        setFollowing(false)\n    }\n\n    const reportPost = (postId) => {\n        console.log(`Trying to report post, open post report selection component with ${postId}`)\n    }\n\n    return (\n        <>\n            <Card size=\"small\" style={profileCardStyle}>\n                <Row>\n                    <Space size={'large'}>\n                        <Avatar size={100} src={props.userObj.profilePicture} />\n                        <Title>{props.userObj.username}</Title>\n                        <Tooltip title={isFollowing ? 'unfollow' : 'follow'}>\n                            {isFollowing ?\n                                <Button shape=\"circle\" icon={<UserDeleteOutlined />} size=\"large\" onClick={() => stopFollowingUser(props.userObj.id)} /> :\n                                <Button style={buttonColor} shape=\"circle\" icon={<UserAddOutlined />} size=\"large\" onClick={() => followUser(props.userObj.id)} type=\"primary\" />\n                            }\n                        </Tooltip>\n                    </Space>\n                </Row>\n                <Card size=\"small\" style={{ width: '100%', borderRadius: '10px', borderColor: '#ffffff', marginTop: \"10px\", marginBottom: \"10px\" }}>\n                    {props.userObj.bio && (props.userObj.isBioPublic || isFollowing) ?\n                        <>\n                            <Col span={24}>\n                                <Space size={'middle'}>\n                                    <strong>Bio</strong>\n                                    <Text>{props.userObj.bio}</Text>\n                                </Space>\n\n                            </Col>\n                        </> : <></>}\n                    {props.userObj.birthday && (props.userObj.isBirthdayPublic || isFollowing) ?\n                        <>\n                            <Col span={24}>\n                                <Space size={'middle'}>\n                                    <strong>Birthday</strong>\n                                    <Text>{props.userObj.birthday}</Text>\n                                </Space>\n                            </Col>\n                        </> : <></>}\n                    {props.userObj.location && (props.userObj.isLocationPublic || isFollowing) ?\n                        <>\n                            <Col span={24}>\n                                <Space size={'middle'}>\n                                    <strong>Location</strong>\n                                    <Text>{props.userObj.location}</Text>\n                                </Space>\n                            </Col>\n                        </> : <></>}\n                </Card>\n\n\n            </Card>\n        </>\n    )\n}\n\nexport default ProfileView","\nimport RouteList from './routing/RouteList';\nimport Login from './components/Login';\nimport Confirmation from './components/Confirmation';\nimport Post from './components/Post';\nimport ProfileEdit from './components/ProfileEdit';\nimport ProfileView from './components/ProfileView';\nimport React from \"react\";\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nimport moment from 'moment' ;\n\nfunction App() {\n\n  let userObj = {\n    username: 'Ufuk',\n    profilePicture: 'https://avatars.githubusercontent.com/u/39625217?s=96&v=4',\n    bio: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n    birthday: moment('11/11/2011'),\n    location: 'istanbul',\n    isProfilePicturePublic: true,\n    isBioPublic: true,\n    isBirthdayPublic: false,\n    isLocationPublic: false,\n    isProfilePublic: true\n  }\n\n  //   let userObj = {\n  //   id: 1,\n  //   username: 'Ufuk',\n  //   profilePicture: 'https://avatars.githubusercontent.com/u/39625217?s=96&v=4',\n  //   bio: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n  //   birthday: '11/11/2011',\n  //   location: 'istanbul',\n  //   isProfilePicturePublic: true,\n  //   isBioPublic: true,\n  //   isBirthdayPublic: false,\n  //   isLocationPublic: false,\n  //   isProfilePublic: true,\n  //   followerCount: 100,\n  //   postCount: 10,\n  //   isFollowing: true\n  // }\n\n  return (\n    <>\n      <RouteList />\n    </>\n  );\n}\n\nexport default App;\n","import {\n  LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE, \n  REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE, \n  LOGOUT, LOGOUT_SUCCESS, LOGOUT_FAILURE, \n} from '../types'\n\nconst initialState = {\n  username: 'Guest',\n  id: \"\",\n  email: '',\n  password: '',\n  isAuthenticated: false,\n  loading:false,\n  token: \"\",\n  isActivated: false\n}\nconst  LoginReducer = (state = initialState, action) => {\n  switch(action.type){\n\n      case LOGIN:\n      return {\n          ...state,\n          username:action.payload.username,\n          password:action.payload.password,\n          loading:true\n      }\n      case LOGIN_SUCCESS:\n      return {\n          ...state,\n          token: action.payload.data.token,\n          loading:false,\n          isAuthenticated:true\n      }\n      case LOGIN_FAILURE:\n      return {\n          ...state,\n          loading:false,\n          isAuthenticated:false\n      }\n      case REGISTER:\n      return {\n          ...state,\n          loading:true\n      }\n      case REGISTER_SUCCESS:\n      return {\n          ...state,\n          loading:false,\n          isAuthenticated:true,\n          username: action.payload.username,\n          email: action.payload.email,\n          password: action.payload.password,\n      }\n      case REGISTER_FAILURE:\n      return {\n          ...state,\n          loading:false,\n          isAuthenticated:false,\n          username: 'Guest',\n          email: '',\n          password: '',\n      }\n      case LOGOUT:\n      return {\n          ...state,\n          loading:true\n      }\n      case LOGOUT_SUCCESS:\n      return {\n          ...state,\n          loading:false,\n          isAuthenticated:false\n      }\n      case LOGOUT_FAILURE:\n      return {\n          ...state,\n          loading:false,\n          isAuthenticated:true\n      }\n      default: return state\n  }\n\n}\n\nexport default LoginReducer;","import { combineReducers } from 'redux'\nimport loginReducer from './loginReducers'\n\nconst reducers = combineReducers({\n  login: loginReducer\n})\n\nexport default reducers;","import {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\nimport rootReducer from './reducers/index'\n\nconst initalState = {\n\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(rootReducer, initalState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}