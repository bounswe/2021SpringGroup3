{
  "openapi": "3.0.0",
  "info": {
    "description": "Boxy <span>&#183;</span> Organized Social Media Platform <small> <i> <br> 2021 CMPE451 Application - Group 3",
    "version": "1.0.0",
    "title": "Boxy"
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Authentication Controller"
    },
    {
      "name": "PostType Controller"
    },
    {
      "name": "Post Controller"
    },
    {
      "name": "Community Controller"
    },
    {
      "name": "Profile Controller"
    },
    {
      "name": "Wikidata Controller"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication Controller"
        ],
        "description": "",
        "operationId": "login",
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login is success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid credentials"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Wrong email or password"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Email is not confirmed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Please verify your email address"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication Controller"
        ],
        "description": "",
        "operationId": "register",
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Register"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Register is success"
          },
          "400": {
            "description": "invalid credential fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid credentials"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "username already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "username should be unique"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/changePassword": {
      "post": {
        "tags": [
          "Authentication Controller"
        ],
        "description": "Change password endpoint",
        "operationId": "changePassword",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Change password is success"
          },
          "400": {
            "description": "invalid password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "invalid password"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "delete": {
        "tags": [
          "Authentication Controller"
        ],
        "operationId": "logout",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Logout Successfully"
          }
        }
      }
    },
    "/post-types/detail": {
      "get": {
        "tags": [
          "PostType Controller"
        ],
        "description": "",
        "operationId": "get postTypeDetail",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "communityId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "postTypeId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get data type names successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostType"
                }
              }
            }
          },
          "404": {
            "description": "Community or post does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Community or post does not exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/post-types/search": {
      "get": {
        "tags": [
          "PostType Controller"
        ],
        "description": "",
        "operationId": "search postTypes",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "communityId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Post types are returned from the community. Selects post types if it has query in it's name",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTypesPreviews"
                }
              }
            }
          },
          "404": {
            "description": "Community does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Community does not exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/post-types": {
      "post": {
        "tags": [
          "PostType Controller"
        ],
        "description": "",
        "operationId": "create postType",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created post type successfully"
          },
          "400": {
            "description": "At least on field should be filled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "At least one field should be filled"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Community does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Community does not exist"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Post type name should be unique inside the community",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Post type name should be unique"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PostType Controller"
        ],
        "description": "",
        "operationId": "get postTypes",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "communityId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get post type preview successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTypesPreviews"
                }
              }
            }
          },
          "404": {
            "description": "Community does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Community does not exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/detail": {
      "get": {
        "tags": [
          "Post Controller"
        ],
        "description": "",
        "operationId": "get postDetail",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "communityId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "postId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get data type names successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostView"
                }
              }
            }
          },
          "404": {
            "description": "Community or post does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Community or post does not exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/like": {
      "post": {
        "tags": [
          "Post Controller"
        ],
        "description": "",
        "operationId": "like post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "postId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "communityId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Like post successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostView"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "You need to be a member of it's community to like this post"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Post does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Post does not exist"
                    }
                  }
                }
              }
            }
          },
          "417": {
            "description": "Expectation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "You have already liked the post"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/unlike": {
      "post": {
        "tags": [
          "Post Controller"
        ],
        "description": "",
        "operationId": "unlike post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "postId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "communityId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Removed like from the post successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostView"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "You need to be a member of it's community to unlike this post"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Post does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Post does not exist"
                    }
                  }
                }
              }
            }
          },
          "417": {
            "description": "Expectation failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "You need to like the post before you unlike"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/search": {
      "get": {
        "tags": [
          "Post Controller"
        ],
        "description": "Search posts by tag or post types",
        "operationId": "search posts",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "communityId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "postTypeId",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "tag",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "createdAt or likeCount"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Post search result. Select posts that has query in it's name",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/Post"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "If the community is private you have to be a member of it to search posts"
          }
        }
      }
    },
    "/posts/advancedSearch": {
      "post": {
        "tags": [
          "Post Controller"
        ],
        "description": "Advanced Search posts by tag or post types. Post request because we need a body",
        "operationId": "advance search posts",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvancedSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post search result. Select posts that has query in it's name",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/Post"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "You can not search fields if it doesn't exist in the post type"
          },
          "401": {
            "description": "If the community is private you have to be a member of it to search posts"
          }
        }
      }
    },
    "/posts/comment": {
      "post": {
        "tags": [
          "Post Controller"
        ],
        "description": "Create a comment for the post",
        "operationId": "comment post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "postId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "You need to be a member of it's community to comment for this post"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Post does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Post does not exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/homepage": {
      "get": {
        "tags": [
          "Post Controller"
        ],
        "description": "",
        "operationId": "get homepage",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns posts from user's communities",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostViews"
                }
              }
            }
          }
        }
      }
    },
    "/posts": {
      "post": {
        "tags": [
          "Post Controller"
        ],
        "description": "",
        "operationId": "create post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created post successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "postId": {
                      "type": "string"
                    },
                    "communityId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "All fields should be filled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Please fill all fields"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Community or post does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Community does not exist or post Type does not exist "
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Post Controller"
        ],
        "description": "",
        "operationId": "get posts",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "communityId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get data type preview successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostViews"
                }
              }
            }
          },
          "404": {
            "description": "Community does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Community does not exist"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Post Controller"
        ],
        "description": "Deletes the post. Also deletes comments it has. You need to be the creator of the post or a moderator in it's community",
        "operationId": "delete",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "postId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete success"
          },
          "401": {
            "description": "You are not authorized to delete this post",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not authorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Post does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Post does not exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/communities": {
      "get": {
        "tags": [
          "Community Controller"
        ],
        "description": "",
        "operationId": "get communities",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "isModerator",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "isMember",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Get community preview successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunitiesPreviews"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Community Controller"
        ],
        "description": "",
        "operationId": "create community",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "isPrivate": {
                    "type": "string"
                  },
                  "iconUrl": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Communities array is returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunitiesPreviews"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Community Controller"
        ],
        "description": "Delete a community. You need to be a moderator to delete a community. This operation also deletes posts, comments it has",
        "operationId": "delete community",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "communityId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Community is deleted"
          }
        }
      }
    },
    "/communities/join": {
      "post": {
        "tags": [
          "Community Controller"
        ],
        "description": "Join to a community. You will be put into the pendingMembers list if the community is private",
        "operationId": "join community",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "communityId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Joined to the community",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunitiesPreviews"
                }
              }
            }
          }
        }
      }
    },
    "/communities/moderators/join": {
      "post": {
        "tags": [
          "Community Controller"
        ],
        "description": "Join to community moderators. You will be put into the pendingModerators list and wait for a moderator to approve your request",
        "operationId": "join communities moderators",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "communityId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Joined to community moderators",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunitiesPreviews"
                }
              }
            }
          }
        }
      }
    },
    "/communities/moderators/approve": {
      "post": {
        "tags": [
          "Community Controller"
        ],
        "description": "Approve a community moderator join request",
        "operationId": "approve community moderator join request",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "communityId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request is decided"
          },
          "401": {
            "description": "You need to be a moderator to decide this join request"
          },
          "404": {
            "description": "Community or user does not exist"
          }
        }
      }
    },
    "/communities/moderators/reject": {
      "post": {
        "tags": [
          "Community Controller"
        ],
        "description": "Reject a community moderator join request",
        "operationId": "reject community moderator join request",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "communityId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request is decided"
          },
          "401": {
            "description": "You need to be a moderator to decide this join request"
          },
          "404": {
            "description": "Community or user does not exist"
          }
        }
      }
    },
    "/communities/approve": {
      "post": {
        "tags": [
          "Community Controller"
        ],
        "description": "Approve a community join request",
        "operationId": "approve community join request",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "communityId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request is decided"
          },
          "401": {
            "description": "You need to be a moderator to decide this join request"
          },
          "404": {
            "description": "Community or user does not exist"
          }
        }
      }
    },
    "/communities/reject": {
      "post": {
        "tags": [
          "Community Controller"
        ],
        "description": "Reject a community join request",
        "operationId": "reject community join request",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "communityId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request is decided"
          },
          "401": {
            "description": "You need to be a moderator to decide this join request"
          },
          "404": {
            "description": "Community or user does not exist"
          }
        }
      }
    },
    "/communities/detail": {
      "get": {
        "tags": [
          "Community Controller"
        ],
        "description": "",
        "operationId": "get communityDetail",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "communityId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get community successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunityDetail"
                }
              }
            }
          },
          "404": {
            "description": "Community or post does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Community or post does not exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/communities/search": {
      "get": {
        "tags": [
          "Community Controller"
        ],
        "description": "",
        "operationId": "search communities",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Community search result. Select communities that has query in it's name",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunitiesPreviews"
                }
              }
            }
          }
        }
      }
    },
    "/communities/recommend": {
      "get": {
        "tags": [
          "Community Controller"
        ],
        "description": "",
        "operationId": "recommend communities",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Top 10 communities with the most members",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunitiesPreviews"
                }
              }
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": [
          "Profile Controller"
        ],
        "description": "",
        "operationId": "get profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get profile page successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyProfile"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Profile Controller"
        ],
        "description": "Delete profile",
        "operationId": "delete profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete profile is success."
          }
        }
      }
    },
    "/profile/settings": {
      "get": {
        "tags": [
          "Profile Controller"
        ],
        "description": "",
        "operationId": "get profile settings",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get profile preview successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileSettings"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Profile Controller"
        ],
        "description": "",
        "operationId": "update profile settings",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile settings is updated"
          }
        }
      }
    },
    "/profile/setNotificationId": {
      "post": {
        "tags": [
          "Profile Controller"
        ],
        "description": "",
        "operationId": "set notification id, which is player id onesignal provides",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Notification id is set"
          }
        }
      }
    },
    "/profile/approve": {
      "post": {
        "tags": [
          "Profile Controller"
        ],
        "description": "Approve a follow request",
        "operationId": "approve follow request",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request is decided"
          },
          "404": {
            "description": "User does not exist"
          }
        }
      }
    },
    "/profile/reject": {
      "post": {
        "tags": [
          "Profile Controller"
        ],
        "description": "Reject a follow request",
        "operationId": "reject follow request",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request is decided"
          },
          "401": {
            "description": "You need to be a moderator to decide this join request"
          },
          "404": {
            "description": "Community or user does not exist"
          }
        }
      }
    },
    "/profile/follow": {
      "post": {
        "tags": [
          "Profile Controller"
        ],
        "description": "Follow a user. You will be put into the pendingFollowers list if the profile is private",
        "operationId": "user follow",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Followed or put into the list"
          },
          "400": {
            "description": "You are already following this user"
          },
          "404": {
            "description": "User does not exist"
          }
        }
      }
    },
    "/profile/unfollow": {
      "post": {
        "tags": [
          "Profile Controller"
        ],
        "description": "Unfollow a user",
        "operationId": "user unfollow",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Followed or put into the list"
          },
          "400": {
            "description": "You are not following this user"
          },
          "404": {
            "description": "User does not exist"
          }
        }
      }
    },
    "/profile/other": {
      "post": {
        "tags": [
          "Profile Controller"
        ],
        "description": "Other user info",
        "operationId": "user other info",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user info"
          },
          "404": {
            "description": "User does not exist"
          }
        }
      }
    },
    "/profile/search": {
      "get": {
        "tags": [
          "Profile Controller"
        ],
        "description": "",
        "operationId": "search profiles",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "communityId",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Profile search result. Select profiles that has query in it's name",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/User"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile/recommend": {
      "get": {
        "tags": [
          "Profile Controller"
        ],
        "description": "",
        "operationId": "recommend profiles",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Top 10 profiles with the most followers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/User"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wikidata": {
      "get": {
        "tags": [
          "Wikidata Controller"
        ],
        "description": "Get wikitags",
        "operationId": "wikitag",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Platform",
            "schema": {
              "type": "string",
              "enum": [
                "ANDROID",
                "WEB"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Wikidata search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/Wikidata"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    },
    "schemas": {
      "Login": {
        "title": "Login model",
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string",
            "example": "jackie or jackie@gmail.com"
          },
          "password": {
            "type": "string",
            "example": ""
          }
        }
      },
      "Register": {
        "title": "Register model",
        "type": "object",
        "required": [
          "username",
          "email",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string",
            "example": "jackie"
          },
          "email": {
            "type": "string",
            "example": "jackie@gmail.com"
          },
          "password": {
            "type": "string",
            "example": ""
          }
        }
      },
      "ChangePassword": {
        "title": "Change password model",
        "type": "object",
        "required": [
          "password"
        ],
        "properties": {
          "password": {
            "type": "string",
            "example": "asfasdfasfd1"
          }
        }
      },
      "PostType": {
        "title": "Post type model",
        "type": "object",
        "required": [
          "name",
          "communityId"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "turnuva"
          },
          "communityId": {
            "type": "string",
            "example": "618fb28cd5da23b323f29dbe"
          },
          "textFieldNames": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Turnuva Adı"
            }
          },
          "numberFieldNames": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Katılımcı Sayısı"
            }
          },
          "dateFieldNames": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Turnuva Tarihi"
            }
          },
          "linkFieldNames": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Kayıt linki"
            }
          },
          "locationFieldNames": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Turnuva yeri"
            }
          }
        }
      },
      "PostTypesPreviews": {
        "title": "Post Types Previews model",
        "type": "array",
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/PostTypePreview"
            }
          ]
        }
      },
      "PostTypePreview": {
        "title": "Post Type Preview model",
        "type": "object",
        "required": [
          "name",
          "id"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "text"
          },
          "id": {
            "type": "string",
            "example": "text"
          }
        }
      },
      "Post": {
        "title": "Post Request model",
        "type": "object",
        "required": [
          "communityId",
          "postTypeId"
        ],
        "properties": {
          "communityId": {
            "type": "string"
          },
          "postTypeId": {
            "type": "string"
          },
          "textFields": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PostFieldInput"
                }
              ]
            }
          },
          "numberFields": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PostFieldInput"
                }
              ]
            }
          },
          "dateFields": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PostFieldInput"
                }
              ]
            }
          },
          "linkFields": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PostFieldInput"
                }
              ]
            }
          },
          "locationFields": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PostLocation"
                }
              ]
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Tag"
                }
              ]
            }
          }
        }
      },
      "AdvancedSearch": {
        "title": "AdvancedSearch model",
        "allOf": [
          {
            "$ref": "#/components/schemas/Post"
          }
        ],
        "type": "object",
        "properties": {
          "sortBy": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          }
        }
      },
      "PostViews": {
        "title": "Post Previews model",
        "type": "array",
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/PostView"
            }
          ]
        }
      },
      "Comment": {
        "title": "comment model",
        "type": "object",
        "required": [
          "text"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "id"
          },
          "text": {
            "type": "string",
            "example": "nice pic"
          },
          "user": {
            "type": "object",
            "$ref": "#/components/schemas/UserPre"
          },
          "createdAt": {
            "type": "string",
            "example": "date"
          }
        }
      },
      "PostView": {
        "title": "Post View model",
        "type": "object",
        "required": [
          "id",
          "username",
          "date",
          "textFields",
          "numberFields",
          "dateFields",
          "linkFields",
          "locationFiels",
          "tags",
          "comments"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": ""
          },
          "username": {
            "type": "string",
            "example": "user98"
          },
          "userImageUrl": {
            "type": "string"
          },
          "communityName": {
            "type": "string",
            "example": "cmpe451"
          },
          "date": {
            "type": "string",
            "example": "11/14/2021 22:34"
          },
          "textFieldNames": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PostFieldInput"
                }
              ]
            }
          },
          "numberFieldNames": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PostFieldInput"
                }
              ]
            }
          },
          "dateFieldNames": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PostFieldInput"
                }
              ]
            }
          },
          "linkFieldNames": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PostFieldInput"
                }
              ]
            }
          },
          "locationFieldNames": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PostLocation"
                }
              ]
            }
          },
          "likeCount": {
            "type": "integer",
            "example": 67
          },
          "isLiked": {
            "type": "boolean",
            "example": true
          },
          "tags": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Tag"
                }
              ]
            }
          },
          "comments": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Comment"
                }
              ]
            }
          }
        }
      },
      "PostFieldInput": {
        "title": "Post field model",
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "turnuva adı"
          },
          "value": {
            "type": "string",
            "example": "İstanbul Satranç turnuvası"
          }
        }
      },
      "LocationField": {
        "title": "Location field model",
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "turnuva yeri"
          },
          "value": {
            "type": "object",
            "$ref": "#/components/schemas/Location"
          }
        }
      },
      "CommunitiesPreviews": {
        "title": "Post Types Previews model",
        "type": "array",
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/CommunityPreview"
            }
          ]
        }
      },
      "CommunityPreview": {
        "title": "Community Preview model",
        "type": "object",
        "required": [
          "name",
          "id",
          "isPrivate"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "text"
          },
          "iconUrl": {
            "type": "string",
            "example": "text"
          },
          "id": {
            "type": "string",
            "example": "text"
          },
          "description": {
            "type": "string",
            "example": "text"
          },
          "isPrivate": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "CommunityDetail": {
        "title": "Community Detail model",
        "type": "object",
        "required": [
          "name",
          "id",
          "isPrivate"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "text"
          },
          "iconUrl": {
            "type": "string",
            "example": "text"
          },
          "id": {
            "type": "string",
            "example": "text"
          },
          "user": {
            "type": "object",
            "$ref": "#/components/schemas/User"
          },
          "description": {
            "type": "string",
            "example": "text"
          },
          "isPrivate": {
            "type": "boolean",
            "example": false
          },
          "isMember": {
            "type": "boolean",
            "example": false
          },
          "isModerator": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "JoinCommunity": {
        "title": "JoinCommunity",
        "type": "object",
        "required": [
          "buttonText",
          "communityMemberCount"
        ],
        "properties": {
          "buttonText": {
            "type": "string",
            "example": "Joined or Request Sent"
          },
          "communityMemberCount": {
            "type": "integer",
            "example": 100
          }
        }
      },
      "MyProfile": {
        "title": "Profile Page Model",
        "type": "object",
        "required": [
          "username",
          "profilePhotoUrl",
          "bio",
          "birthday",
          "location"
        ],
        "properties": {
          "username": {
            "type": "string",
            "example": "text"
          },
          "profilePhotoUrl": {
            "type": "string",
            "example": "text"
          },
          "bio": {
            "type": "string",
            "example": "text"
          },
          "birthday": {
            "type": "string",
            "example": "text"
          },
          "location": {
            "type": "object",
            "$ref": "#/components/schemas/Location"
          }
        }
      },
      "UserPreview": {
        "title": "User Preview",
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "text"
          },
          "profilePhotoUrl": {
            "type": "string",
            "example": "text"
          },
          "bio": {
            "type": "string",
            "example": "text"
          },
          "birthday": {
            "type": "string",
            "example": "text"
          },
          "location": {
            "type": "object",
            "$ref": "#/components/schemas/Location"
          },
          "isPrivate": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "UserPre": {
        "title": "UserPre model",
        "type": "object",
        "required": [
          "id",
          "username",
          "profilePhotoUrl",
          "isPrivate"
        ],
        "properties": {
          "username": {
            "type": "string",
            "example": "text"
          },
          "id": {
            "type": "string",
            "example": "text"
          },
          "profilePhotoUrl": {
            "type": "string",
            "example": "https://cat_image.jpg"
          },
          "isPrivate": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "ProfileSettings": {
        "title": "Profile Settings Model",
        "type": "object",
        "required": [
          "profilePhotoUrl",
          "bio",
          "birthday",
          "location"
        ],
        "properties": {
          "isPrivate": {
            "type": "boolean",
            "example": false
          },
          "profilePhotoUrl": {
            "type": "object",
            "$ref": "#/components/schemas/ProfileSettingsItems"
          },
          "bio": {
            "type": "object",
            "$ref": "#/components/schemas/ProfileSettingsItems"
          },
          "birthday": {
            "type": "object",
            "$ref": "#/components/schemas/ProfileSettingsItems"
          },
          "location": {
            "type": "object",
            "$ref": "#/components/schemas/Location"
          },
          "followers": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/UserPreview"
                }
              ]
            }
          },
          "pendingFollowers": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/UserPreview"
                }
              ]
            }
          }
        }
      },
      "ProfileSettingsItems": {
        "title": "Profile Settings Item Model",
        "type": "object",
        "required": [
          "value",
          "isPublic"
        ],
        "properties": {
          "value": {
            "type": "string",
            "example": "text"
          },
          "isPublic": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "User": {
        "title": "User model",
        "type": "object",
        "required": [
          "username",
          "id",
          "imageUrl"
        ],
        "properties": {
          "username": {
            "type": "string",
            "example": "text"
          },
          "id": {
            "type": "string",
            "example": "text"
          },
          "imageUrl": {
            "type": "string",
            "example": "https://cat_image.jpg"
          }
        }
      },
      "LocationValueModel": {
        "title": "Location Value Model",
        "type": "object",
        "required": [
          "latitude",
          "longitude"
        ],
        "properties": {
          "latitude": {
            "type": "integer",
            "example": 3.435345
          },
          "longitude": {
            "type": "integer",
            "example": 3.435345
          }
        }
      },
      "Location": {
        "title": "Location Model",
        "type": "object",
        "required": [
          "value",
          "isPublic",
          "description"
        ],
        "properties": {
          "value": {
            "type": "object",
            "$ref": "#/components/schemas/LocationValueModel"
          },
          "isPublic": {
            "type": "boolean",
            "example": true
          },
          "description": {
            "type": "string",
            "example": "text"
          }
        }
      },
      "PostLocation": {
        "title": "Post Location Model",
        "type": "object",
        "required": [
          "geo",
          "description"
        ],
        "properties": {
          "geo": {
            "type": "object",
            "$ref": "#/components/schemas/LocationValueModel"
          },
          "description": {
            "type": "string",
            "example": "text"
          }
        }
      },
      "Tag": {
        "title": "Tag Model",
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "Q11573"
          },
          "name": {
            "type": "string",
            "example": "metre"
          }
        }
      },
      "Wikidata": {
        "title": "Wikidata Model",
        "type": "object",
        "required": [
          "id",
          "label",
          "description"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "Q11573"
          },
          "label": {
            "type": "string",
            "example": "metre"
          },
          "description": {
            "type": "string",
            "example": "SI unit of length"
          }
        }
      }
    }
  }
}
