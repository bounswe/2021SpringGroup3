openapi: "3.0.0"
info:
  description: "Boxy <span>&#183;</span> Organized Social Media Platform <small> <i> <br> 2021 CMPE451 Application - Group 3"
  version: "1.0.0"
  title: "Boxy"
tags:
- name: "Authentication Controller"
- name: "PostType Controller"
- name: "Post Controller"
paths:
  /login:
    post:
      tags:
      - "Authentication Controller"
      description: ""
      operationId: "login"
      parameters:
        - in: header
          name: X-Platform
          schema:
            type: string
            enum: ["ANDROID", "WEB"]
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Login Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Wrong email or password
        '400':
          description: Invalid username/password supplied
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid credentials
        '405':
          description: Email is not confirmed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Please verify your email address
  /register:
    post:
      tags:
      - "Authentication Controller"
      description: ""
      operationId: "register"
      parameters:
        - in: header
          name: X-Platform
          schema:
            type: string
            enum: ["ANDROID", "WEB"]
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '200':
          description: Login Successfully
        '409':
          description: username already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Username should be unique
        '400':
          description: invalid credential fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid credentials
  /logout:
    delete:
       tags:
       - "Authentication Controller"
       operationId: "logout"
       parameters:
        - in: header
          name: X-Platform
          schema:
            type: string
            enum: ["ANDROID", "WEB"]
          required: true
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer ...
          required: true
       responses:
        '200':
          description: Logout Successfully
  /post-type:
   post:
      tags:
      - "PostType Controller"
      description: ""
      operationId: "create postType"
      parameters:
        - in: header
          name: X-Platform
          schema:
            type: string
            enum: ["ANDROID", "WEB"]
          required: true
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer ...
          required: true
        - in: query
          name: communityId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostType'
      responses:
        '201':
          description: Created post type successfully
        '400':
          description: At least on field should be filled
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "At least one field should be filled"
        '409':
          description: Post type name should be unique inside the community
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Post type name should be unique"
        '404':
          description: Community does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Community does not exist"
  /post-type/detail:
   get:
      tags:
      - "PostType Controller"
      description: ""
      operationId: "get postTypeDetail"
      parameters:
        - in: header
          name: X-Platform
          schema:
            type: string
            enum: ["ANDROID", "WEB"]
          required: true
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer ...
          required: true
        - in: query
          name: communityId
          schema:
            type: string
          required: true
        - in: query
          name: postTypeId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Get data type names successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostType'
        '404':
          description: Community or post does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Community or post does not exist"
  /post-types:
   get:
      tags:
      - "PostType Controller"
      description: ""
      operationId: "get postTypes"
      parameters:
        - in: header
          name: X-Platform
          schema:
            type: string
            enum: ["ANDROID", "WEB"]
          required: true
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer ...
          required: true
        - in: query
          name: communityId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Get post type preview successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTypesPreviews'
        '404':
          description: Community does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Community does not exist"
  /post:
   post:
      tags:
      - "Post Controller"
      description: ""
      operationId: "create post"
      parameters:
        - in: header
          name: X-Platform
          schema:
            type: string
            enum: ["ANDROID", "WEB"]
          required: true
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer ...
          required: true
        - in: query
          name: communityId
          schema:
            type: string
          required: true
        - in: query
          name: postTypeId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '201':
          description: Created post type successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
        '400':
          description: All fields should be filled
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "Please fill all fields"
        '404':
          description: Community or post does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "Community does not exist or post Type does not exist "
  /post/detail:
   get:
      tags:
      - "Post Controller"
      description: ""
      operationId: "get postDetail"
      parameters:
        - in: header
          name: X-Platform
          schema:
            type: string
            enum: ["ANDROID", "WEB"]
          required: true
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer ...
          required: true
        - in: query
          name: communityId
          schema:
            type: string
          required: true
        - in: query
          name: postId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Get data type names successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostView'
        '404':
          description: Community or post does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "Community or post does not exist"
  /posts:
   get:
      tags:
      - "Post Controller"
      description: ""
      operationId: "get posts"
      parameters:
        - in: header
          name: X-Platform
          schema:
            type: string
            enum: ["ANDROID", "WEB"]
          required: true
        - in: header
          name: Authorization
          schema:
            type: string
            example: Bearer ...
          required: true
        - in: query
          name: communityId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Get data type preview successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  PostList:
                    type: array
                    items:
                      oneOf:
                       - $ref: '#/components/schemas/PostView'
        '404':
          description: Community does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "Community does not exist"
components:
  schemas:
    Login:
      title: 'Login model'
      type: "object"
      required:
      - "userName"
      - "password"
      properties:
        userName:
          type: "string"
          example: "jackie or jackie@gmail.com"
        password:
          type: "string"
          example: ""
    Register:
      title: 'Register model'
      type: "object"
      required:
      - "userName"
      - "email"
      - "password"
      properties:
        userName:
          type: "string"
          example: "jackie" 
        email:
          type: "string"
          example: "jackie@gmail.com"
        password:
          type: "string"
          example: ""
    PostType:
      title: 'Post type model'
      type: "object"
      required:
      - "name"
      - "textFieldNames"
      - "numberFieldNames"
      - "dateFieldNames"
      - "linkFieldNames"
      - "locationFieldNames"
      properties:
        name:
          type: "string"
          example: "turnuva" 
        textFieldNames:
          type: array
          items:
            type: string
            example: "Turnuva Adı"
        numberFieldNames:
          type: array
          items:
            type: string
            example: "Katılımcı Sayısı"
        dateFieldNames:
          type: array
          items:
            type: string
            example: "Turnuva Tarihi" 
        linkFieldNames:
          type: array
          items:
            type: string
            example: "Kayıt linki"
        locationFieldNames:
          type: array
          items:
            type: string
            example: "Turnuva yeri"
    PostTypesPreviews:
      title: 'Post Types Previews model'
      type: "array"
      items:
        oneOf:
          - $ref: '#/components/schemas/PostTypePreview'
    PostTypePreview:
      title: 'Post Type Preview model'
      type: "object"
      required:
      - "name"
      - "id"
      properties:
        name:
          type: "string"
          example: "text" 
        id:
          type: "string"
          example: "text" 
    Post:
      title: 'Post Request model'
      type: "object"
      required:
      - "textFields"
      - "numberFields"
      - "dateFields"
      - "linkFields"
      - "locationFiels"
      properties:
        textFieldNames:
          type: array
          items:
            oneOf:
             - $ref: '#/components/schemas/PostFieldInput'
        numberFieldNames:
          type: array
          items:
            oneOf:
             - $ref: '#/components/schemas/PostFieldInput'
        dateFieldNames:
          type: array
          items:
            oneOf:
             - $ref: '#/components/schemas/PostFieldInput'
        linkFieldNames:
          type: array
          items:
            oneOf:
             - $ref: '#/components/schemas/PostFieldInput'
        locationFieldNames:
          type: array
          items:
            oneOf:
             - $ref: '#/components/schemas/PostFieldInput'
    PostView:
      title: 'Post View model'
      type: "object"
      required:
      - "id"
      - "userName"
      - "date"
      - "textFields"
      - "numberFields"
      - "dateFields"
      - "linkFields"
      - "locationFiels"
      properties:
        id:
          type: "string"
          example: "" 
        userName:
          type: "string"
          example: "user98" 
        date:
          type: number
          example: "1636156949000" 
        textFieldNames:
          type: array
          items:
            oneOf:
             - $ref: '#/components/schemas/PostFieldInput'
        numberFieldNames:
          type: array
          items:
            oneOf:
             - $ref: '#/components/schemas/PostFieldInput'
        dateFieldNames:
          type: array
          items:
            oneOf:
             - $ref: '#/components/schemas/PostFieldInput'
        linkFieldNames:
          type: array
          items:
            oneOf:
             - $ref: '#/components/schemas/PostFieldInput'
        locationFieldNames:
          type: array
          items:
            oneOf:
             - $ref: '#/components/schemas/PostFieldInput'
        likeCount:
          type: integer
          example: 67
        isLiked:
           type: boolean
           example: true
    PostFieldInput:
      title: 'Post field model'
      type: "object"
      required:
      - "name"
      - "value"
      properties:
        name:
          type: "string"
          example: "turnuva adı" 
        value:
          type: "string"
          example: "İstanbul Satranç turnuvası" 
    
    
